import { useEffect, useState } from 'react';
import { HeadHunterAchievement, PlayerStats, Achievement } from '../types/types';
import { calculateHeadHunter, calculateMostBlasterKills, calculateMostChats, calculateMostEventStreak, calculateMostGrenadeKills, calculateMostQuads, calculateMostTelefrags, calculateNoMercyForMinions, calculateSpecialist, calculateWrongTurn, getBestFragAchievers, getDominatorAchievers, getLeastUsedWeapon, getWftAchievers, getWillPowerAchievers } from '../utils/functions';
import { getLanguage } from '../utils/getLanguage';

import Sponsor from '../img/Sponsor.png'; // Tell webpack this JS file uses this image
import Quad_maniac from '../img/Quad_maniac.png'; // Tell webpack this JS file uses this image
import Dartagnan from '../img/Dartagnan.png'; // Tell webpack this JS file uses this image
import Chat_lord from '../img/Chat_lord.png'; // Tell webpack this JS file uses this image
import Boomstick_baron from '../img/Boomstick_baron.png'; // Tell webpack this JS file uses this image
import Dominator from '../img/Dominator.png'; // Tell webpack this JS file uses this image
import Grenadier from '../img/Grenadier.png'; // Tell webpack this JS file uses this image
import Head_hunter from '../img/Head_hunter.png'; // Tell webpack this JS file uses this image
import Optimist from '../img/Optimist.png';
import Respawn_hero from '../img/Respawn_hero.png';
import Troublemaker from '../img/Troublemaker.png';
import Wrong_turn from '../img/Wrong_turn.png';
import Zero_tolerance from '../img/Zero_tolerance.png';
import Best_frag from '../img/Best_frag.png';
import WFT_moment from '../img/WTF_moment.png';
import Will_power from '../img/Will_power.png';
import Q2 from '../img/Q2.png';
import AchievementItem from './Achivement';
import { getPlayer } from '../utils/getPlayer';

interface AchievementsProps {
    playerStats: Record<string, PlayerStats>;
    weaponStats: Record<string, number> | null;
    nonGameEvents?: string[];
}

export const Achievements = ({playerStats, weaponStats, nonGameEvents}: AchievementsProps) => {

    const [mostQuads, setMostQuads] = useState<Achievement | null>(null);
    const [bestFrag, setBestFrag] = useState<Achievement | null>(null);
    const [wft, setWft] = useState<Achievement | null>(null);
    const [dominator, setDominator] = useState<Achievement | null>(null);
    const [willPower, setWillPower] = useState<Achievement | null>(null);
    const [headHunter, setHeadHunter] = useState<HeadHunterAchievement | null>(null);
    const [mostTelefrags, setMostTelefrags] = useState<Achievement | null>(null);
    const [wrongTurn, setWrongTurn] = useState<Achievement | null>(null);
    const [mostEventStreak, setMostEventStreak] = useState<Achievement | null>(null);
    const [mostBully, setMostBully] = useState<HeadHunterAchievement | null>(null);
    const [mostGrenades, setMostGrenades] = useState<Achievement | null>(null);
    const [mostBlaster, setMostBlaster] = useState<Achievement | null>(null);
    const [leastUsedWeapon, setLeastUsedWeapon] = useState<{ weapon: string; count: number } | null>(null);
    const [specialist, setSpecialist] = useState<{ player: string; weapon: string; kills: number } | null>(null);
    const [tetKillers, setTetKiller] = useState<{ player: string; killsOnTet: number }[] | null>(null);
    const [tetSuicides, setTetSuicides] = useState<number | null>(null);
    const [mostChats, setMostChats] = useState<Achievement | null>(null);
    const lang = getLanguage();
    const activePlayer = getPlayer();


    useEffect(() => {
        setHeadHunter(calculateHeadHunter(playerStats));
        setMostTelefrags(calculateMostTelefrags(playerStats));
        setWrongTurn(calculateWrongTurn(playerStats));
        setMostGrenades(calculateMostGrenadeKills(playerStats));
        setMostBlaster(calculateMostBlasterKills(playerStats));
        setMostEventStreak(calculateMostEventStreak(playerStats));
        setMostBully(calculateNoMercyForMinions(playerStats));
        setMostChats(calculateMostChats(playerStats));
        setMostQuads(calculateMostQuads(playerStats));
        setBestFrag(getBestFragAchievers(playerStats));
        setWft(getWftAchievers(playerStats));
        setDominator(getDominatorAchievers(playerStats));
        setWillPower(getWillPowerAchievers(playerStats));
    }, [playerStats, weaponStats]);

    useEffect(() => {
      const hasTet = Object.keys(playerStats).some(name => name.toLowerCase().includes('tet'));
      if (hasTet) {
        const tetKillers = Object.entries(playerStats).map(([player, stats]) => ({
          player, killsOnTet: stats.killBreakdown['tet'] || 0
        }));
        ;
        setTetSuicides(playerStats['tet']?.suicides || 0);
        setTetKiller(tetKillers);
      }
    }, [playerStats]);

    useEffect(() => {
        const leastUsedWeapon = getLeastUsedWeapon(weaponStats);
        setLeastUsedWeapon(leastUsedWeapon);
        playerStats && leastUsedWeapon && setSpecialist(calculateSpecialist(leastUsedWeapon?.weapon, playerStats));
    }, [playerStats, weaponStats]);

    return <>
      <div className='page' style={{ margin: '30px 0' }}>

        <h2>{ lang === 'en' ? 'Prize Pool üèÜüí∞ Achievements' : '–ü—Ä–∏–∑–æ–≤—ã–µ üèÜüí∞ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è'}</h2>
        <div className='achievements-list page'>

          <AchievementItem title={'Best Frag'} achievement={bestFrag} image={Best_frag}
            text={{
              en: <><strong>{bestFrag?.achievers.join(' & ')}</strong> catches the moment your crosshair and destiny had perfect chemistry.</>,
              ru: <><strong>{bestFrag?.achievers.join(' & ')}</strong> –ø–æ–π–º–∞–ª –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ –ø—Ä–∏—Ü–µ–ª –∏ —Å—É–¥—å–±–∞ –∏–¥–µ–∞–ª—å–Ω–æ —Å–æ—à–ª–∏—Å—å.</>
            }}
          />

          <AchievementItem title={'WFT Moment'} achievement={wft} image={WFT_moment}
            text={{
              en: <><strong>{wft?.achievers.join(' & ')}</strong> wanted to make it look cool‚Ä¶ and ended up earning an achievement instead.</>,
              ru: <><strong>{wft?.achievers.join(' & ')}</strong> —Ö–æ—Ç–µ–ª —Å–¥–µ–ª–∞—Ç—å –∫—Ä–∞—Å–∏–≤–æ, –∞ –ø–æ–ª—É—á–∏–ª–æ—Å—å... –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.</>
            }}
          />

          <AchievementItem title={'Dominator'} achievement={dominator} image={Dominator}
            text={{
              en: <><strong>{dominator?.achievers.join(' & ')}</strong> dominated the arena with unstoppable force.</>,
              ru: <><strong>{dominator?.achievers.join(' & ')}</strong> –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–ª –Ω–∞ –∞—Ä–µ–Ω–µ —Å –Ω–µ—É–¥–µ—Ä–∂–∏–º–æ–π —Å–∏–ª–æ–π.</>
            }}
          />

          <AchievementItem title={'Quad maniac'} achievement={mostQuads} image={Quad_maniac}
            text={{
              en: <><strong>{mostQuads?.achievers.join(' & ')}</strong> picked up Quad <strong>{mostQuads?.count}</strong> times and turned the match into a one-sided massacre.</>,
              ru: <><strong>{mostQuads?.achievers.join(' & ')}</strong> —É—Ä–≤–∞–ª Quad <strong>{mostQuads?.count}</strong> —Ä–∞–∑ –∏ –º–∞—Ç—á –ø—Ä–µ–≤—Ä–∞—Ç–∏–ª—Å—è –≤ –∫–∞–∑–Ω—å.</>
            }}
          />

          <AchievementItem title={'Head Hunter'} achievement={headHunter} image={Head_hunter}
            text={{
              en: <><strong>{headHunter?.hunter}</strong> is the Head Hunter for killing the group leader (<strong>{headHunter?.leader}</strong>) {headHunter?.killsOnLeader} {headHunter?.killsOnLeader || 0 > 1 ? 'times' : 'time'}!</>,
              ru: <><strong>{headHunter?.hunter}</strong> ‚Äî –æ—Ö–æ—Ç–Ω–∏–∫ –∑–∞ –≥–æ–ª–æ–≤–∞–º–∏, —É–±–∏–≤—à–∏–π –ª–∏–¥–µ—Ä–∞ –≥—Ä—É–ø–ø—ã (<strong>{headHunter?.leader}</strong>) —É–±–∏–≤ –µ–≥–æ {headHunter?.killsOnLeader} —Ä–∞–∑!</>
            }}
          />

          <AchievementItem title={'Respawn Hero'} achievement={mostTelefrags} image={Respawn_hero}
            text={{
              en: <><strong>{mostTelefrags?.achievers.join(' & ')}</strong> {mostTelefrags?.achievers.length || 0 > 1 ? 'share the award' : 'gets the award'} with <strong>{mostTelefrags?.count}</strong> telefrags!</>,
              ru: <><strong>{mostTelefrags?.achievers.join(' & ')}</strong> {mostTelefrags?.achievers.length || 0> 1 ? '–¥–µ–ª—è—Ç –Ω–∞–≥—Ä–∞–¥—É' : '–ø–æ–ª—É—á–∞–µ—Ç –Ω–∞–≥—Ä–∞–¥—É'} —Å <strong>{mostTelefrags?.count}</strong> —Ç–µ–ª–µ—Ñ—Ä–∞–≥–∞–º–∏!</>
            }}
          />

          <AchievementItem title={''} achievement={wrongTurn} image={Wrong_turn}
            text={{
              en: <><strong>{wrongTurn?.achievers.join(' & ')}</strong> took a wrong turn {wrongTurn?.count} {wrongTurn?.count || 0 > 1 ? 'times' : 'time'} to earn this award.</>,
              ru: <>–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —ç—Ç—É –Ω–∞–≥—Ä–∞–¥—É, <strong>{wrongTurn?.achievers.join(' & ')}</strong> {wrongTurn?.count} —Ä–∞–∑ —Å–≤–µ—Ä–Ω—É–ª –Ω–µ —Ç—É–¥–∞.</>
            }}
          />

          <AchievementItem title={'Grenadier'} achievement={mostGrenades} image={Grenadier}
            text={{
              en: <><strong>{mostGrenades?.achievers.join(' & ')}</strong> earned the top spot with <strong>{mostGrenades?.count}</strong> grenade kills!</>,
              ru: <><strong>{mostGrenades?.achievers.join(' & ')}</strong> –∑–∞–Ω—è–ª –ø–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ, —Å–æ–≤–µ—Ä—à–∏–≤ <strong>{mostGrenades?.count}</strong> —É–±–∏–π—Å—Ç–≤(–∞) –≥—Ä–∞–Ω–∞—Ç–∞–º–∏!</>
            }}
          />

          <AchievementItem title={'Troublemaker'} achievement={mostEventStreak} image={Troublemaker}
            text={{
              en: <><strong>{mostEventStreak?.achievers.join(' & ')}</strong> caused chaos with an event streak of <strong>{mostEventStreak?.count}</strong>!</>,
              ru: <><strong>{mostEventStreak?.achievers.join(' & ')}</strong> –≤—ã–∑–≤–∞–ª —Ö–∞–æ—Å —Å —Å–µ—Ä–∏–µ–π —Å–æ–±—ã—Ç–∏–π –¥–ª–∏–Ω–Ω–æ–π –≤ <strong>{mostEventStreak?.count}</strong>!</>
            }}
          />

          <AchievementItem title={'Will Power'} achievement={willPower} image={Will_power}
            text={{
              en: <><strong>{willPower?.achievers.join(' & ')}</strong> demonstrated unwavering willpower in the face of adversity.</>,
              ru: <><strong>{willPower?.achievers.join(' & ')}</strong> –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª –Ω–µ–ø–æ–∫–æ–ª–µ–±–∏–º—É—é —Å–∏–ª—É –≤–æ–ª–∏ –ø–µ—Ä–µ–¥ –ª–∏—Ü–æ–º –Ω–µ–≤–∑–≥–æ–¥.</>
            }}
          />
        </div>

        <h2>{ lang === 'en' ? 'Bonus üèÜüåü Perks' : '–ë–æ–Ω—É—Å–Ω—ã–µ üèÜüåü –ù–∞–≤—ã–∫–∏'}</h2>
        <div className='achievements-list page'>

          <AchievementItem cssClass={'bonus'} title={'Zero tolerance'} achievement={mostBully} image={Zero_tolerance}
            text={{
              en: <><strong>{mostBully?.hunter}</strong> Has no mercy for weakest by killing <strong>{mostBully?.leader}</strong> {mostBully?.killsOnLeader} {mostBully?.killsOnLeader || 0 > 1 ? 'times' : 'time'}!</>,
              ru: <><strong>{mostBully?.hunter}</strong> –Ω–µ —â–∞–¥–∏—Ç —Å–∞–º—ã—Ö —Å–ª–∞–±—ã—Ö, —É–±–∏–≤ <strong>{mostBully?.leader}</strong> {mostBully?.killsOnLeader} —Ä–∞–∑!</>
            }}
          />

          <AchievementItem cssClass={'bonus'} title={'Optimist'} achievement={mostBlaster} image={Optimist}
            text={{
              en: <><strong>{mostBlaster?.achievers.join(' & ')}</strong> tops the charts with <strong>{mostBlaster?.count}</strong> blaster kills!</>,
              ru: <><strong>{mostBlaster?.achievers.join(' & ')}</strong> –≤–æ–∑–≥–ª–∞–≤–ª—è–µ—Ç —á–∞—Ä—Ç—ã, —É–±–∏–≤ <strong>{mostBlaster?.count}</strong> –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–æ–≤ –∏–∑ –±–ª–∞—Å—Ç–µ—Ä–∞!</>
            }}
          />

          { /* Player with most kills from Least used weapon */}
          {
            leastUsedWeapon && specialist && (activePlayer ? specialist.player.toLocaleLowerCase() === activePlayer : true) && (
              <div className='achievement bonus'>
                <div className='icon'><img src={ Boomstick_baron } alt='tet'/></div>
                <div>
                  <h3>Boomstick baron</h3>
                  { lang === 'en' ?
                    <p>
                      <strong>{specialist.player}</strong> mastered the <strong>{specialist.weapon}</strong> with <strong>{specialist.kills}</strong> kills, the least used weapon with only <strong>{leastUsedWeapon.count}</strong> total kills!
                    </p>
                    :
                    <p>
                      <strong>{specialist.player}</strong> –≤ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–µ –æ—Å–≤–æ–∏–ª <strong>{specialist.weapon}</strong>, —Å–æ–≤–µ—Ä—à–∏–≤ <strong>{specialist.kills}</strong> —É–±–∏–π—Å—Ç–≤(–∞) ‚Äî —ç—Ç–æ –Ω–∞–∏–º–µ–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–µ –æ—Ä—É–∂–∏–µ, —Å –∫–æ—Ç–æ—Ä—ã–º –±—ã–ª–æ —Å–æ–≤–µ—Ä—à–µ–Ω–æ –≤—Å–µ–≥–æ <strong>{leastUsedWeapon.count}</strong> —É–±–∏–π—Å—Ç–≤(–∞)!
                    </p>
                  }
                </div>
              </div>
            )
          }

          <AchievementItem cssClass={'bonus'} title={'Chat lord'} achievement={mostChats} image={Chat_lord}
            text={{
              en: <><strong>{mostChats?.achievers.join(' & ')}</strong> leads the chatter with <strong>{mostChats?.count}</strong> chat messages!</>,
              ru: <><strong>{mostChats?.achievers.join(' & ')}</strong> –ª–∏–¥–∏—Ä—É–µ—Ç –≤ —á–∞—Ç–µ —Å <strong>{mostChats?.count}</strong> —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏!</>
            }}
          />

        </div>

        { /* personalized achievements section */ }
        <h2>{ lang === 'en' ? 'Personal rewards üéñÔ∏è' : '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã üéñÔ∏è'}</h2>
        <div className='achievements-list page'>
          {
            (activePlayer ? activePlayer === 'spacer' || activePlayer === 'tet' : true) && tetKillers && lang !== 'en' && (
              <div className='achievement personal'>
                <div className='icon'><img src={Dartagnan} alt='tet'/></div>
                <div>
                  –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ <strong>Spacer</strong>
                  <h3>–î`–ê—Ä—Ç–∞–Ω—å—è–Ω</h3>

                  <p>–ß–∏—Ç–µ—Ä—ã –∑–∞–º–µ—à–∞–Ω–Ω—ã–µ –≤ –¥–µ–ª–µ</p>
                  <ul>
                  {
                    tetKillers.sort((a, b) => b.killsOnTet - a.killsOnTet).map(({ player, killsOnTet }, index) => {
                      const epitet = ['–Ω–µ—á–µ—Å—Ç–Ω–æ', '–≥–Ω—É—Å–Ω–æ', '–ø–æ–¥–ª–æ', '–≤–µ—Ä–æ–ª–æ–º–Ω–æ', '–∫–æ–≤–∞—Ä–Ω–æ', '—Ö–∏—Ç—Ä–æ–∂–æ–ø–æ', '–º–µ—Ä–∑–∫–æ', '–≥–∞–¥–∫–æ', '–≥—Ä—è–∑–Ω–æ', '–Ω–∏–∑–º–µ–Ω–Ω–æ', '–ø—Ä–µ–¥–∞—Ç–µ–ª—å—Å–∫–∏'];
                      return killsOnTet === 0 ? null : <li key={player}>
                        <strong>{player}</strong> {epitet[index]} —É–±–∏–ª tet-–∞ <strong>{killsOnTet}</strong> —Ä–∞–∑(–∞)
                      </li>
                    })
                  }
                  </ul>
                  <p>–î–∞ –∏ —Å–∞–º tet –º–æ–ª–æ–¥–µ—Ü! –ü—Ä–µ–¥–∞—Ç–µ–ª—å—Å–∫–∏ —Å–∞–º–æ–ª–∏–∫–≤–∏–¥–∏—Ä–æ–≤–∞–ª—Å—è <strong>{tetSuicides}</strong> —Ä–∞–∑(–∞).</p>
                </div>
              </div>
            )
          }
          {
            (activePlayer ? activePlayer === 'q' : true) && lang !== 'en' && (
              <div className='achievement personal'>
                <div className='icon'><img src={Sponsor} alt='tet'/></div>
                <div>
                  –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ <strong>Q</strong>
                  <h3>–°–ø–æ–Ω—Å–æ—Ä –®—Ä—ë–¥–∏–Ω–≥–µ—Ä–∞</h3>
                  <p>–ö–≤–∞–Ω—Ç–æ–≤–∞—è –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–∏–Ω–æ—Å–∏—Ç Q 666 –±–æ–Ω—É—Å–Ω—ã—Ö –æ—á–∫–æ–≤.</p>
                </div>
              </div>
            )
          }
          {
            (activePlayer ? activePlayer === 'sparkq2' : true) && lang !== 'en' && (
            <div className='achievement personal'>
              <div className='icon'><img src={Q2} alt='tet'/></div>
              <div>
                –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ <strong>SparkQ2</strong>
                <h3>Map maker</h3>
                <p>–ö–æ–Ω–≤–µ—Ä—Å–∏—è Corrupted Keep –¥–ª—è —Ç—É—Ä–Ω–∏—Ä–∞</p>
              </div>
            </div>
          )}
          {
            (activePlayer ? activePlayer === 'werwolf' : true) && lang !== 'en' && (
              <div className='achievement personal'>
                <div className='icon'><img src={Q2} alt='tet'/></div>
                <div>
                  –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ <strong>WerWolf</strong>
                  <h3>Liquidpedia master</h3>
                  <p>–∑–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –≤–∫–ª–∞–¥ –≤ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞</p>
                </div>
              </div>
          )}
          {
            (activePlayer ? activePlayer === 'tim' : true) && lang !== 'en' && (
              <div className='achievement personal'>
                <div className='icon'><img src={Q2} alt='tet'/></div>
                <div>
                  –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ <strong>TIM</strong>
                  <h3>Qualification hero</h3>
                  <p>–û–±—ã–≥—Ä–∞–ª –î–∞–≤–∏–¥–∞ –Ω–∞ –µ–≥–æ —Å–∏–ª—å–Ω–µ–π—à–µ–π –∫–∞—Ä—Ç–µ</p>
                </div>
              </div>
          )}
        </div>
      </div>
    </>
}